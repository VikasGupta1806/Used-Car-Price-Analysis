# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GecaIrHxu7feaE0oPFenOZGwwdnYrFvf
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import OneHotEncoder  # Import OneHotEncoder

df = pd.read_csv('car_prices_cleaned.csv')

X = df.drop(columns=['sellingprice', 'vin', 'saledate'])
y = df['sellingprice']

categorical_cols = X.select_dtypes(include=['object']).columns


ohe = OneHotEncoder(handle_unknown='ignore', sparse_output=False)
X_encoded = pd.DataFrame(ohe.fit_transform(X[categorical_cols]))
X_encoded.columns = ohe.get_feature_names_out(categorical_cols)
X = X.drop(categorical_cols, axis=1).join(X_encoded)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

rf_model = RandomForestRegressor(n_estimators=100, random_state=42)

rf_model.fit(X_train, y_train)

y_pred = rf_model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error (MSE): {mse}')
print(f'R-squared (R2) Score: {r2}')

pred_df = pd.DataFrame({'Actual Value': y_test, 'Predicted Value': y_pred, 'Difference': y_test - y_pred})

print(pred_df)

y_train_pred = rf_model.predict(X_train)
train_mse = mean_squared_error(y_train, y_train_pred)
train_r2 = r2_score(y_train, y_train_pred)

test_mse = mean_squared_error(y_test, y_pred)
test_r2 = r2_score(y_test, y_pred)

print(f'Training Mean Squared Error (MSE): {train_mse}')
print(f'Training R-squared (R2) Score: {train_r2}')
print(f'Testing Mean Squared Error (MSE): {test_mse}')
print(f'Testing R-squared (R2) Score: {test_r2}')